name: Backend Deploy Workflow

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Extract repository name
        run: echo "REPO_NAME=$(echo ${GITHUB_REPOSITORY##*/})" >> $GITHUB_ENV

      - name: Login to Container Registry
        run: docker login ${{ secrets.CONTAINER_REGISTRY }} -u nologin --password-stdin <<< ${{ secrets.REGISTRY_API_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GIT_TOKEN }}
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.CONTAINER_REGISTRY }}/backend_v2:${{ github.sha }}
            ${{ secrets.CONTAINER_REGISTRY }}/backend_v2:latest
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            NODE_ENV=production
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  update:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Use CLI
        uses: scaleway/action-scw@v0
        id: cli
        with:
          save-config: true
          export-config: true
          version: v2.13.0
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCW_SECRET_KEY }}
          default-project-id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          default-organization-id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
          args: container container deploy ${{ secrets.SERVERLESS_ID }}
